package rand

import (
  "crypto/rand"
  "encoding/base64"
)

const rememberTokenBytes = 32

// RememberToken is a helper function designed to generate remember tokens of a set size
func RememberToken() (string, error) {
  return randString(rememberTokenBytes)
}

// Bytes will generate n bytes
func Bytes(n int) ([]byte, error) {
  b := make([]byte, n)
  _, err := rand.Read(b)
  if err != nil {
    return nil, err
  }
  return b, nil
}

// NBytes returns the number of bytes used in any string generated by the randString or RememberToken functions
func NBytes(base64String string) (int, error) {
  b, err := base64.URLEncoding.DecodeString(base64String)
  if err != nil {
    return -1, err
  }
  return len(b), nil
}

func randString(nBytes int) (string, error) {
  b, err := Bytes(nBytes)
  if err != nil {
    return "", err
  }
  return base64.URLEncoding.EncodeToString(b), nil
}
